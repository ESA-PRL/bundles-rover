--- name:default
# Time in s between actuator_samples readings
actuator_samples_period: 0.08
# the frame name for the body frame
body_frame: body
# the global name that should be used for the internal imu_world frame
#imu_world_frame: imu

# configuration struct for the asguard odometry class
odometry_config:
  seed: 42
  constError:
    translation:
      data:
      - 0.002
      - 0.005
      - 0.001
    yaw: 0.0001
  distError:
    translation:
      data:
      - 0.1
      - 0.5
      - 0.0
    yaw: 0.0
  tiltError:
    translation:
      data:
      - 0.1
      - 0.5
      - 0.0
    yaw: 0.0
  dthetaError:
    translation:
      data:
      - 0.2
      - 0.0
      - 0.0
    yaw: 0.0
  useZeroVelocity: true

# the frame name for the odometry frame
odometry_frame: navigation

# list of static transformations
static_transformations: []
# Maximum time in seconds the transformer will wait until it starts dropping samples
transformer_max_latency: 0.1
# Minimum system time in seconds between two updates of the status ports
transformer_status_period: 0.08
# If this value is set to true, the position field of the actuator samples will be used to calculate the translation
usePosition: false

# wheel base
leftWheelNames: [fl_drive, ml_drive, rl_drive]
# wheel base
rightWheelNames: [fr_drive, mr_drive, rr_drive]

--- name:exoter
# track width
trackWidth: 0.620
# wheel base
wheelBase: 0.530
# wheel radius average
wheelRadiusAvg: 0.072703

--- name:HDPR
# TODO: This has to be updated with the correct values
# track width
trackWidth: 0.620
# wheel base
wheelBase: 0.530
# wheel radius average
wheelRadiusAvg: 0.072703

--- name:oroconf
# Time in s between actuator_samples readings
actuator_samples_period: 0.001
# the frame name for the body frame
body_frame: body
# the global name that should be used for the internal imu_world frame
imu_world_frame: imu_world
# wheel base
leftWheelNames: []
# configuration struct for the asguard odometry class
odometry_config:
  seed: 42
  constError:
    translation:
      data:
      - 0.002
      - 0.005
      - 0.001
    yaw: 0.0001
  distError:
    translation:
      data:
      - 0.1
      - 0.5
      - 0.0
    yaw: 0.0
  tiltError:
    translation:
      data:
      - 0.1
      - 0.5
      - 0.0
    yaw: 0.0
  dthetaError:
    translation:
      data:
      - 0.2
      - 0.0
      - 0.0
    yaw: 0.0
  useZeroVelocity: true
# the frame name for the odometry frame
odometry_frame: odometry
# wheel base
rightWheelNames: []
# starting position for odometry
start_pose:
  time:
    microseconds: 0
  sourceFrame: ''
  targetFrame: ''
  position:
    data:
    - .nan
    - .nan
    - .nan
  cov_position:
    data:
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
  orientation:
    im:
    - .nan
    - .nan
    - .nan
    re: .nan
  cov_orientation:
    data:
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
  velocity:
    data:
    - .nan
    - .nan
    - .nan
  cov_velocity:
    data:
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
  angular_velocity:
    data:
    - .nan
    - .nan
    - .nan
  cov_angular_velocity:
    data:
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
    - .nan
# list of static transformations
static_transformations: []
# track width
trackWidth: 0.0
# Maximum time in seconds the transformer will wait until it starts dropping samples
transformer_max_latency: 0.1
# Minimum system time in seconds between two updates of the status ports
transformer_status_period: 1.0
# If this value is set to true, the position field of the actuator samples will be used to calculate the translation
usePosition: false
# wheel base
wheelBase: 0.0
# wheel radius avarage
wheelRadiusAvg: 0.0
